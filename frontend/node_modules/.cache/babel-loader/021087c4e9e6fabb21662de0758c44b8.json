{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fgauf\\\\OneDrive\\\\NODE.JS\\\\Connect REACT to Mongo\\\\frontend\\\\src\\\\components\\\\Notes.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Notes = () => {\n  _s();\n\n  const [notes, setNotes] = useState([{\n    //constante notes, fonstion setNotes\n    title: '',\n    content: ''\n  }]);\n  useEffect(() => {\n    fetch(\"/notes\").then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonRes => setNotes(jsonRes));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }, this);\n};\n\n_s(Notes, \"GhRqikyWRL0U0bRCn4U03LBs5jE=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/fgauf/OneDrive/NODE.JS/Connect REACT to Mongo/frontend/src/components/Notes.jsx"],"names":["React","useEffect","useState","Notes","notes","setNotes","title","content","fetch","then","res","ok","json","jsonRes","map","note"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;AAEI,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAC;AAAG;AAClCI,IAAAA,KAAK,EAAC,EADyB;AAE/BC,IAAAA,OAAO,EAAC;AAFuB,GAAD,CAAD,CAAjC;AAKAN,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBC,IAAhB,CAAqBC,GAAG,IAAE;AACtB,UAAGA,GAAG,CAACC,EAAP,EAAU;AACN,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,OAAO,IAAIR,QAAQ,CAACQ,OAAD,CAJ3B;AAKH,GANQ,CAAT;AAOA,sBAAQ;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,EAEHT,KAAK,CAACU,GAAN,CAAUC,IAAI,iBACf;AAAA,8BAAE;AAAA,kBAAKA,IAAI,CAACT;AAAV;AAAA;AAAA;AAAA;AAAA,cAAF,eAAuB;AAAA,kBAAIS,IAAI,CAACR;AAAT;AAAA;AAAA;AAAA;AAAA,cAAvB;AAAA,oBADC,CAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOC,CApBL;;GAAMJ,K;;KAAAA,K;AAsBV,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\n    const Notes = () => {\r\n        const[notes, setNotes] = useState([{  //constante notes, fonstion setNotes\r\n            title:'',\r\n            content:''\r\n        }]) \r\n\r\n        useEffect(()=>{\r\n            fetch(\"/notes\").then(res=>{\r\n                if(res.ok){\r\n                    return res.json()\r\n                }\r\n            }).then(jsonRes => setNotes(jsonRes));\r\n        })\r\n        return (<div>\r\n            <h1>Notes</h1>\r\n            {notes.map(note =>\r\n            <><h1>{note.title}</h1><p>{note.content}</p></>\r\n            )}\r\n        </div>\r\n        )\r\n        }\r\n\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}